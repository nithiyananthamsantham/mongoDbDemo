#spring.application.name=mongoDbDemo
server:
  port: 9191
  ssl:
    key-store: E:/ChiRohi/keystore.p12
    key-store-password: secret
    key-alias: hotel-server
spring:
#  security:
#    oauth2:
#      client:
#        registration:
##          github:
##            clientId: github-client-id
##            clientSecret: github-client-secret
#          google:
#            client-id: 1032459263243-1q2ptuluk0n3hkmf0rh0pq5v2r4jug52.apps.googleusercontent.com
#            client-secret: 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
  application:
    name: mongoDbDemo
  datasource:
    url: jdbc:postgresql://localhost:5432/hotelDb
    username: postgres
    password: admin
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  data:
    mongodb:
      database: orderdb
      host: localhost
      port: 27017
#  kafka:
#    consumer:
#      bootstrap-servers: localhost:9092
#      group-id: topic-from-service
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      properties:
#        spring:
#          json:
#            trusted:
#              packages: com.*
#    producer:
##      bootstrap-servers: localhost:9092
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  server:
    port: 9001
  endpoints:
    web:
      exposure:
        include:
        - "*"
#datasource:
#    url: jdbc:postgresql://localhost:5432/hotelDb/dev_hotel_pro
#    username: hotelDb
#    password: admin
#  jpa:
#  hibernate:
#    ddl-auto: update
#    show-sql: true
hotel:   
    app:
     provider:
        url: https://github.com/nithiyananthamsantham/configuration_hotel

